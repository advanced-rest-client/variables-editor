{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Dialog to edit a variable.",
      "summary": "",
      "path": "variable-editor-dialog.js",
      "properties": [
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "Value of the variable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "opened",
          "type": "boolean | null | undefined",
          "description": "True if the dialog should be opened.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 6
            },
            "end": {
              "line": 393,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selectedDoc",
          "type": "number | null | undefined",
          "description": "Selected documentation page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 6
            },
            "end": {
              "line": 399,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_selectedDocChanged\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "docs",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 6
            },
            "end": {
              "line": 400,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "evaluated",
          "type": "string | null | undefined",
          "description": "Evaluated variable value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 404,
              "column": 6
            },
            "end": {
              "line": 404,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_selectedDocChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 2
            },
            "end": {
              "line": 422,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedDoc"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_evaluate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processFunctionInsertClick",
          "description": "Handler for list item cloick.\nProcesses event if the target is the button.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 465,
              "column": 2
            },
            "end": {
              "line": 476,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_insertFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 478,
              "column": 2
            },
            "end": {
              "line": 495,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onClosed",
          "description": "Hanlder for dialog's close event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 500,
              "column": 2
            },
            "end": {
              "line": 512,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resized",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 514,
              "column": 2
            },
            "end": {
              "line": 516,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 275,
          "column": 0
        },
        "end": {
          "line": 517,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "UiElements.VariableEditorDialog",
      "attributes": [
        {
          "name": "value",
          "description": "Value of the variable.",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 6
            },
            "end": {
              "line": 391,
              "column": 19
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opened",
          "description": "True if the dialog should be opened.",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 6
            },
            "end": {
              "line": 393,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-doc",
          "description": "Selected documentation page",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 6
            },
            "end": {
              "line": 399,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "docs",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 6
            },
            "end": {
              "line": 400,
              "column": 17
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "evaluated",
          "description": "Evaluated variable value",
          "sourceRange": {
            "start": {
              "line": 404,
              "column": 6
            },
            "end": {
              "line": 404,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "variable-editor-dialog"
    },
    {
      "description": "# `variable-item`\n\nIt is a variable list item to be displayed in the `<variable-editor>`.\n\n### Styling\n\n`<variable-item>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--inline-fom-action-icon-color` | Theme variable, color of the delete variable icon | `rgba(0, 0, 0, 0.74)`\n`--inline-fom-action-icon-color-hover` | Theme variable, color of the delete variable icon when hovering | `--accent-color` or `rgba(0, 0, 0, 0.74)`",
      "summary": "",
      "path": "variable-item.js",
      "properties": [
        {
          "name": "item",
          "type": "Object | null | undefined",
          "description": "A variable database object.\nInitially it will contain an _id and _rev object and data will be get from the database.\nSpecial case is when creating new variable. It will then contain an initial data but no ID.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "reservedNames",
          "type": "Array | null | undefined",
          "description": "A list of names that are restricted",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "debounceTimeout",
          "type": "number | null | undefined",
          "description": "Number of milliseconds after which the item is persisted in the data\nstore after any property change.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "350"
        },
        {
          "name": "_isDirty",
          "type": "boolean | null | undefined",
          "description": "True if during the save another change occured and the item\nschould be saved again.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_updatingModel",
          "type": "boolean | null | undefined",
          "description": "True if the item is currently being updated.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 160,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 2
            },
            "end": {
              "line": 175,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            },
            {
              "name": "cancelable",
              "type": "?Boolean",
              "description": "When false the event is not cancelable."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_itemChanged",
          "description": "Called when item's `_rev` property changed (due to datastore update).\nIt checks if between save action and now the user made changes in the editor\nand if so it updates the item again.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_somethingChanged",
          "description": "To be called when any `item` property change.\nUpdates variable value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateItem",
          "description": "Sends event to data model to update the variable.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_removeVariable",
          "description": "Handler for the remove button click.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 271,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_openVariableEditor",
          "description": "Opens the variable editor dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 283,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onVariableEditorClosed",
          "description": "Called when the editor dialog is closed and sets new value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 304,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "UiElements.VariableItem",
      "attributes": [
        {
          "name": "item",
          "description": "A variable database object.\nInitially it will contain an _id and _rev object and data will be get from the database.\nSpecial case is when creating new variable. It will then contain an initial data but no ID.",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 138,
              "column": 18
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "reserved-names",
          "description": "A list of names that are restricted",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 6
            },
            "end": {
              "line": 145,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "debounce-timeout",
          "description": "Number of milliseconds after which the item is persisted in the data\nstore after any property change.",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 153,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "empty-variable-remove",
          "description": "Fired when not-saved variable has ben requested to be removed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "variable-deleted",
          "description": "Fired when the variable has been removed from the data-store.\nEvent should be handled by the `variables-editor` to remove it from the UI.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "variable-item"
    },
    {
      "description": "A variables editor is an element to render UI for `variables-manager`.\n\nIt displays list of user defined environments and variables associated with\nthe  environment.\n\nThis element requires compatible variables manager to be present in the DOM. It\nuses browser event system to communicate with the manager. See `variables-manager`\ndocumentation for detailed API for data exchange.\n\n### Example\n\n```html\n<variables-editor></variables-editor>\n<variables-manager></variables-manager>\n```\n\n### Styling\n\n`<variables-editor>` provides the following custom properties and mixins\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--variables-editor-add-color` | Color of the `add` button | `--primary-color`\n`--variables-editor-add-environment-color` | Color of the add environment icon button | `rgba(0, 0, 0, 0.54)`\n`--variables-editor-add-environment-color-hover | Color of the add environment icon button when hovering | `--accent-color` or `rgba(0, 0, 0, 0.74)`\n`--variables-editor-remove-env-color` | Color of the remove button (icon) | `rgba(0, 0, 0, 0.24)`\n`--variables-editor-remove-env-color-hover` | Color of the hovered remove button (icon) | `#e64a19`\n`--accent-color` | Background color of the primary action button | ``\n`--primary-light-color` | Color of the primary action button | `#fff`\n`--variables-editor-docs-frame-content-background` | Background color of the help section content container. | `#E1F5FE`\n`--variables-editor-primary-button-background-color` | Background color of the primary action button | `--accent-color`\n`--variables-editor-primary-button-color` | Color of the primary action button | `--primary-light-color` or `#fff`\n`--inline-fom-action-icon-color` | Theme variable, color of the delete variable icon | `rgba(0, 0, 0, 0.74)`\n`--inline-fom-action-icon-color-hover` | Theme variable, color of the delete variable icon when hovering | `--accent-color` or `rgba(0, 0, 0, 0.74)`",
      "summary": "",
      "path": "variables-editor.js",
      "properties": [
        {
          "name": "allowRemove",
          "type": "boolean | null | undefined",
          "description": "Computed value, set to `true` if the environment can be removed.\nOnly `default` environment can't be deleted",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "envEditorOpened",
          "type": "boolean | null | undefined",
          "description": "True if the environment editor is opened.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 251,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_filtered",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 256,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 2
            },
            "end": {
              "line": 285,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            },
            {
              "name": "cancelable",
              "type": "?Boolean",
              "description": "When false the event is not cancelable."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_dispatchEnvUpdated",
          "description": "Sends environment-updated event to the model",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 2
            },
            "end": {
              "line": 295,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "Anvironment value to update."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_dispatchEnvDeleted",
          "description": "Sends environment-deleted event to the model",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 2
            },
            "end": {
              "line": 305,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "String",
              "description": "ID of deleted environment"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_sendGaEvent",
          "description": "Sends usage google analytics event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "action",
              "type": "String",
              "description": "Action description"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_sendGaError",
          "description": "Sends error event to google analytics",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 329,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message",
              "type": "String",
              "description": "Exception message"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_toast",
          "description": "Shows toast with the message",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 2
            },
            "end": {
              "line": 337,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processVariables",
          "description": "Processes variables list returned by the variables manager.\nFilters out variables that are set in platform environment.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 2
            },
            "end": {
              "line": 351,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Change record"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Updated list of variables."
          }
        },
        {
          "name": "_computeAllowRemove",
          "description": "Computes value for `allowRemove` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 2
            },
            "end": {
              "line": 359,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "environment",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          }
        },
        {
          "name": "openAddEnvironmentForm",
          "description": "Opens environment editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 2
            },
            "end": {
              "line": 366,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "closeAddEnvironmentForm",
          "description": "Closes environment editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 2
            },
            "end": {
              "line": 372,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_findEnvironment",
          "description": "Finds environment model by name.\nThe list of environments are stored in memory in environment selector.\nTo simplify the logic this element won't hold it's own copy of environments list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 2
            },
            "end": {
              "line": 395,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "String",
              "description": "Name of the environment to find."
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Environment model or undefined if not found."
          }
        },
        {
          "name": "_validateEnvironmentInput",
          "description": "Validates user input when adding an environment.\nIt renders a message to the user if input did not passed the validation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 2
            },
            "end": {
              "line": 423,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "String"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if user input is valid."
          }
        },
        {
          "name": "_addEnvironment",
          "description": "Handler for the save action for add environment form.\nValidates user input and sends `environment-updated` event to the model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 2
            },
            "end": {
              "line": 457,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_deleteEnvironment",
          "description": "Handler for the delete button.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 2
            },
            "end": {
              "line": 488,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "addVariable",
          "description": "Add new, empty variable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 492,
              "column": 2
            },
            "end": {
              "line": 503,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeEmptyVariable",
          "description": "Removes unsaved variable",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 508,
              "column": 2
            },
            "end": {
              "line": 514,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeAddButtonHidden",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 516,
              "column": 2
            },
            "end": {
              "line": 518,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "envEditorOpened"
            },
            {
              "name": "hasVariables"
            }
          ]
        },
        {
          "name": "_openHelp",
          "description": "Opens documentation page for the module.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 526,
              "column": 2
            },
            "end": {
              "line": 537,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ],
          "return": {
            "type": "(Window | undefined)"
          }
        },
        {
          "name": "_addEnvInput",
          "description": "Checks for \"enter\" key to add environment.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 2
            },
            "end": {
              "line": 546,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "KeyboardEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processEnvSplices",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 555,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_revalidateEnvInput",
          "description": "Validates user input when environment name change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 559,
              "column": 2
            },
            "end": {
              "line": 566,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 72,
          "column": 0
        },
        "end": {
          "line": 572,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.VariablesEditor",
      "attributes": [
        {
          "name": "allow-remove",
          "description": "Computed value, set to `true` if the environment can be removed.\nOnly `default` environment can't be deleted",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "env-editor-opened",
          "description": "True if the environment editor is opened.",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 251,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "open-external-url",
          "description": "When an external URL is requested to open.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "variables-editor",
      "mixins": [
        "VariablesConsumerMixin"
      ]
    }
  ]
}
